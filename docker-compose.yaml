version: '3.8'
services:
  # Orion is the context broker
  orion:
#    labels:
#      org.fiware: 'tutorial'
    platform: linux/amd64
    image: quay.io/fiware/orion-ld:${ORION_LD_VERSION}
    hostname: orion
    container_name: fiware-orion
    restart: always
    depends_on:
      - mongo-db
    networks:
      - default
    ports:
      - ${EXPOSED_PORT:-1026}:${ORION_LD_PORT:-1026}
    environment:
      - ORIONLD_TROE=TRUE
      - ORIONLD_TROE_USER=orion
      - ORIONLD_TROE_PWD=orion
      - ORIONLD_TROE_HOST=timescale-db
      - ORIONLD_MONGO_HOST=mongo-db
      - ORIONLD_MULTI_SERVICE=TRUE
      - ORIONLD_DISABLE_FILE_LOG=TRUE
    command: -dbhost mongo-db -logLevel DEBUG -forwarding -mongocOnly -wip entityMaps
    healthcheck:
      test: curl --fail -s http://orion:${ORION_LD_PORT}/version || exit 1
      interval: 10s


  iot-agent:
 #   labels:
  #    org.fiware: 'tutorial'
    image: quay.io/fiware/iotagent-json:${JSON_VERSION}
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - context
    networks:
      - default
    ports:
      - "${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}" # localhost:4041
      - "${IOTA_SOUTH_PORT}:${IOTA_SOUTH_PORT}" # localhost:7896
    environment:
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=INFO # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentjson # The name of the database used in mongoDB
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT}
      - IOTA_CB_NGSI_VERSION=ld # use NGSI-LD when sending updates for active attributes
      - IOTA_JSON_LD_CONTEXT=http://context:5051/ngsi-context.jsonld
      - IOTA_FALLBACK_TENANT=openiot
      - IOTA_MULTI_CORE=true
      - IOTA_MQTT_HOST=mosquitto # The host name of the MQTT Broker
      - IOTA_MQTT_PORT=1883 # The port the MQTT Broker is listening on to receive topics
      - IOTA_DEFAULT_RESOURCE= # Default is blank. I'm using MQTT so I don't need a resource
      - IOTA_DEFAULT_TRANSPORT=MQTT
     #- IOTA_DEFAULT_RESOURCE=/iot/d
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_LD_PORT}
    healthcheck:
      interval: 30s

  mintaka:
    image: quay.io/fiware/mintaka:${MINTAKA_VERSION}
    hostname: mintaka
    container_name: fiware-mintaka
    restart: always
    depends_on:
      - timescale-db
    environment:
      - DATASOURCES_DEFAULT_HOST=timescale-db
      - DATASOURCES_DEFAULT_USERNAME=orion
      - DATASOURCES_DEFAULT_PASSWORD=orion
      - DATASOURCES_DEFAULT_DATABASE=orion
      - DATASOURCES_DEFAULT_MAXIMUM_POOL_SIZE=2
      - ENDPOINTS_INFO_ENABLED=true
      - ENDPOINTS_INFO_SENSITIVE=false
    expose:
      - "${MINTAKA_PORT}"
    ports:
      - "${MINTAKA_PORT}:${MINTAKA_PORT}"
    networks:
      - default

  timescale-db:
    image: timescale/timescaledb-postgis:${TIMESCALE_VERSION}
    hostname: timescale-db
    container_name: timescale-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U orion" ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 60s
    environment:
      - POSTGRES_USER=orion
      - POSTGRES_PASSWORD=orion
      - POSTGRES_HOST_AUTH_METHOD=trust
    command: ["postgres", "-c", "log_statement=none"]
    expose:
      - "${TIMESCALE_PORT}"
    ports:
      - "${TIMESCALE_PORT}:${TIMESCALE_PORT}"
    volumes:
      - timescale-db:/var/lib/postgresql/data
    networks:
      - default
 
  mongo-db:
    image: mongo:7.0
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017" 
    networks:
      - default
    volumes:
      - mongo-db:/data/db
      - mongo-config:/data/configdb
 #   healthcheck:
 #     test: ["CMD","mongosh", "localhost:27017/test", "--quiet"]
 #     interval: 5s
 
  mosquitto:
    image: danny0117/mosquitto:0.2.0
    hostname: mosquitto
    container_name: mosquitto
   # labels:
   #   org.fiware: 'tutorial'
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
  #  volumes:
 #     - ../mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - default

  context: 
    image: danny0117/incode-heu-contextfiles:${CONTEXT_DOCKER_TAG}
    hostname: context
    container_name: context
    expose: 
      - '${CONTEXT_PORT}'
    ports:
      - '${CONTEXT_PORT}:${CONTEXT_PORT}'
    networks:
      - default

  application: 
    image : danny0117/incode-heu-aa3-uc1:1.0.8
    hostname: application
    container_name: application
    expose:
      - "3002"
    ports:
      - "3002:3002"
    environment:
    - ORION_NAME=orion
    - ORION_PORT=1026
    - IOTA_CONTAINER_NAME=iot-agent
    - IOTA_CONTAINER_PORT=4041
    - MINTAKA_NAME=mintaka
    - MINTAKA_PORT=8080
    - CONTEXT_CONTAINER_NAME=context
    - CONTEXT_PORT=5051
    - MOSQUITTO_CONTAINER_NAME=mosquitto
    - MOSQUITTO_CONTAINER_PORT=1883
    networks:
      - default

networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  timescale-db: ~
  mongo-db: ~
  mongo-config: ~